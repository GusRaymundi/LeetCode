//Gustavo Raymundi Nygaard
//M2 AED 1
//TRABALHO 2


typedef struct {
    bool *seats;
    int size;
    int min;
    
} SeatManager;


SeatManager* seatManagerCreate(int n) {
    SeatManager *obj = malloc(sizeof(SeatManager));
    obj->seats =calloc((n+1),sizeof(bool));
    obj->size=n+1;
    obj->min=1;
    return obj;
}

int seatManagerReserve(SeatManager* obj) {
    int ret = obj->min;
    (obj->seats)[ret] = true;
    
    while (obj->min < obj->size && obj->seats[obj->min] != false)
        obj->min++;

    return ret;
}

void seatManagerUnreserve(SeatManager* obj, int seatNumber) {
    obj->seats[seatNumber] = false;
    obj->min = fmin(obj->min, seatNumber);
    return;
}

void seatManagerFree(SeatManager* obj) {
    free(obj->seats);
    free(obj);
}

/**
 * Your SeatManager struct will be instantiated and called as such:
 * SeatManager* obj = seatManagerCreate(n);
 * int param_1 = seatManagerReserve(obj);
 
 * seatManagerUnreserve(obj, seatNumber);
 
 * seatManagerFree(obj);
*/
